{
    "Ln": 3,
    "a_l_ratio": 200.0,
    "a_shape": [],
    "act_dim": 21,
    "act_space": "",
    "alpha": 0.1,
    "batch_size": 256,
    "c_regularizer": 0.0,
    "env_name": "11_vs_11_easy_stochastic",
    "exp_name": "343E1",
    "gamma": 0.997,
    "gpu_fraction": 0.2,
    "hidden_size": [
        300,
        400,
        300
    ],
    "log_dir": "/home/shuai/Distributed-DRL/algos/maxsqn_nstep_football/tboard_ray/2019-10-17 17:18:08.563156-workers_num:12%200.011_vs_11_easy_stochastic-343E1",
    "lr": 5e-05,
    "max_ep_len": 960,
    "max_ret": 0,
    "num_learners": 1,
    "num_workers": 12,
    "o_shape": [
        115
    ],
    "obs_dim": 115,
    "obs_space": "",
    "polyak": 0.995,
    "replay_size": 3000000,
    "representation": "simple115",
    "rollout_env_class": "def build_scenario(builder):\n  builder.SetFlag('game_duration', 3000)\n  builder.SetFlag('game_difficulty', 0.05)\n  builder.SetFlag('deterministic', False)\n  if builder.EpisodeNumber() % 2 == 0:\n    first_team = Team.e_Left\n    second_team = Team.e_Right\n  else:\n    first_team = Team.e_Right\n    second_team = Team.e_Left\n  builder.SetTeam(first_team)\n  builder.AddPlayer(-1.000000, 0.000000, e_PlayerRole_GK)\n  builder.AddPlayer(0.000000,  0.020000, e_PlayerRole_RM)\n  builder.AddPlayer(0.000000, -0.020000, e_PlayerRole_CF)\n  builder.AddPlayer(-0.422000, -0.19576, e_PlayerRole_LB)\n  builder.AddPlayer(-0.500000, -0.06356, e_PlayerRole_CB)\n  builder.AddPlayer(-0.500000, 0.063559, e_PlayerRole_CB)\n  builder.AddPlayer(-0.422000, 0.195760, e_PlayerRole_RB)\n  builder.AddPlayer(-0.184212, -0.10568, e_PlayerRole_CM)\n  builder.AddPlayer(-0.267574, 0.000000, e_PlayerRole_CM)\n  builder.AddPlayer(-0.184212, 0.105680, e_PlayerRole_CM)\n  builder.AddPlayer(-0.010000, -0.21610, e_PlayerRole_LM)\n  builder.SetTeam(second_team)\n  builder.AddPlayer(-1.000000, 0.000000, e_PlayerRole_GK)\n  builder.AddPlayer(-0.050000, 0.000000, e_PlayerRole_RM)\n  builder.AddPlayer(-0.010000, 0.216102, e_PlayerRole_CF)\n  builder.AddPlayer(-0.422000, -0.19576, e_PlayerRole_LB)\n  builder.AddPlayer(-0.500000, -0.06356, e_PlayerRole_CB)\n  builder.AddPlayer(-0.500000, 0.063559, e_PlayerRole_CB)\n  builder.AddPlayer(-0.422000, 0.195760, e_PlayerRole_RB)\n  builder.AddPlayer(-0.184212, -0.10568, e_PlayerRole_CM)\n  builder.AddPlayer(-0.267574, 0.000000, e_PlayerRole_CM)\n  builder.AddPlayer(-0.184212, 0.105680, e_PlayerRole_CM)\n  builder.AddPlayer(-0.010000, -0.21610, e_PlayerRole_LM)\n",
    "rollout_env_name": "11_vs_11_easy_stochastic",
    "save_dir": "/home/shuai/Distributed-DRL/algos/maxsqn_nstep_football/343E1",
    "save_freq": 1,
    "seed": 0,
    "stacked": false,
    "start_steps": 50000,
    "steps_per_epoch": 5000,
    "summary_dir": "/home/shuai/Distributed-DRL/algos/maxsqn_nstep_football/tboard_ray",
    "target_entropy": 0.5,
    "use_bn": false,
    "use_max": false,
    "weights_file": "",
    "with_checkpoints": false,
    "wrapper": "class FootballWrapper(object):\n\n    def __init__(self, env):\n        self._env = env\n\n    def __getattr__(self, name):\n        return getattr(self._env, name)\n\n    def reset(self):\n        obs = self._env.reset()\n        return obs\n\n    def step(self, action):\n        r = 0.0\n        for _ in range(3):\n            obs, reward, done, info = self._env.step(action)\n\n            r += reward\n\n            if done:\n                return obs, r * 200, done, info\n\n        return obs, r * 200, done, info\n"
}